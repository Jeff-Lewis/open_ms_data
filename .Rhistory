df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(study = ifelse(mod=="Gold_Standard", NA, study))
# df = df %>%
# mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = study, value = file)
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods, "gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(study = ifelse(mod=="Gold_Standard", NA, study))
# df = df %>%
# mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = study, value = file)
df = rename(df, `<NA>` = "Gold_Standard")
df = rename(df,  "Gold_Standard" = `<NA>`)
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods, "gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*(study\\d).*", "\\1", x))
df = df %>%
mutate(study = ifelse(mod == "Gold_Standard", NA, study))
# df = df %>%
# mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = study, value = file)
df = rename(df,  "Gold_Standard" = `<NA>`)
df
df = gather(df, key = study, value = file, study1, study2)
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods, "gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*(study\\d).*", "\\1", x))
df = df %>%
mutate(study = ifelse(mod == "Gold_Standard", NA, study))
# df = df %>%
# mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = study, value = file)
df = rename(df,  "Gold_Standard" = `<NA>`)
View(df)
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*(study\\d).*", "\\1", x))
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
# df = df %>%
# mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = study, value = file)
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
# df = df %>%
# mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = mod, value = file)
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
# df = df %>%
# mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = mod, value = file)
df = df %>%
mutate(Gold_Standard = file.path(dirname(FLAIR), "gt.nii.gz"))
knitr::kable(df, col.names = rep("", ncol(df)))
df
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(Gold_Standard = file.path(dirname(file), "gt.nii.gz"))
df = spread(df, key = mod, value = file)
head(df)
long_raw = as.data.frame(df)
save(long_raw, file = "long_raw.rda", compress = "xz")
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(Gold_Standard = file.path(dirname(file), "gt.nii.gz"))
long_raw = as.data.frame(df)
save(long_raw, file = "long_raw.rda", compress = "xz")
head(df)
df = spread(df, key = mod, value = file)
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(Gold_Standard = file.path(dirname(file), "gt.nii.gz"))
long_raw = as.data.frame(df)
save(long_raw, file = "long_raw.rda", compress = "xz")
df = df %>%
mutate(file = paste0("[", mod, "](", file, ")"))
df
df = spread(df, key = mod, value = file)
head(df)
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/coregistered/", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/coregistered/", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
x
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/coregistered/", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("(gt|brainmask)[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
brainmask = "Brain_Mask",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(Gold_Standard = file.path(dirname(file), "gt.nii.gz"),
Brain_Mask = file.path(dirname(file), "brainmask.nii.gz"))
long_coreg = as.data.frame(df)
save(long_coreg, file = "long_coreg.rda", compress = "xz")
head(df)
knitr::opts_chunk$set(
collapse = TRUE,
comment = ""
)
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "cross_sectional/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
mods = nii.stub(x, bn = TRUE)
mods = recode(mods, "consensus_gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods, id = basename(dirname(x)))
cs_raw = as.data.frame(df)
save(cs_raw, file = "cs_raw.rda", compress = "xz")
df = df %>%
mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = mod, value = file)
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "cross_sectional/coregistered/", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
mods = nii.stub(x, bn = TRUE)
mods = recode(mods, "consensus_gt" = "Gold_Standard",
brainmask = "Brain_Mask",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods, id = basename(dirname(x)))
cs_coreg = as.data.frame(df)
save(cs_coreg, file = "cs_coreg.rda", compress = "xz")
df = df %>%
mutate(file = paste0("[", mod, "](", file, ")"))
df = spread(df, key = mod, value = file)
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/raw", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("gt[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(Gold_Standard = file.path(dirname(file), "gt.nii.gz"))
long_raw = as.data.frame(df)
save(long_raw, file = "long_raw.rda", compress = "xz")
df = df %>%
mutate(file = paste0("[", mod, "](", file, ")"),
Gold_Standard = paste0("[Gold_Standard](", Gold_Standard, ")"))
df = spread(df, key = mod, value = file)
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/coregistered/", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
brainmask = "Brain_Mask",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(Gold_Standard = file.path(dirname(file), "gt.nii.gz"),
Brain_Mask = file.path(dirname(file), "brainmask.nii.gz"))
save(long_coreg, file = "long_coreg.rda", compress = "xz")
library(neurobase)
library(dplyr)
library(tidyr)
x = list.files(
path = "longitiudinal/coregistered/", pattern = ".nii.gz",
recursive = TRUE, full.names = TRUE)
x = x[ !grepl("(gt|brainmask)[.]nii", x)]
mods = nii.stub(x, bn = TRUE)
mods = gsub("study\\d_", "", mods)
mods = recode(mods,
"gt" = "Gold_Standard",
brainmask = "Brain_Mask",
T1W = "T1", T1WKS = "T1Post", T2W = "T2")
df = data_frame(file = x, mod = mods,
id = basename(dirname(x)),
study = sub(".*study(\\d).*", "\\1", x))
df = df %>%
mutate(Gold_Standard = file.path(dirname(file), "gt.nii.gz"),
Brain_Mask = file.path(dirname(file), "brainmask.nii.gz"))
long_coreg = as.data.frame(df)
save(long_coreg, file = "long_coreg.rda", compress = "xz")
df = df %>%
mutate(file = paste0("[", mod, "](", file, ")"),
Gold_Standard = paste0("[Gold_Standard](", Gold_Standard, ")"),
Brain_Mask = paste0("[Brain_Mask](", Brain_Mask, ")"))
df = spread(df, key = mod, value = file)
knitr::opts_chunk$set(
collapse = TRUE,
comment = ""
)
library(neurobase)
library(dplyr)
library(tidyr)
library(readr)
cs_demog = read_csv("cross_sectional/patient_info.csv")
cs_demog
read_csv("longitiudinal/patient_info.csv")
dput(colnames(cs_demog))
source('~/.active-rstudio-document', echo=TRUE)
cs_demog
long_demog
source('~/.active-rstudio-document', echo=TRUE)
cs_demog = read_csv("cross_sectional/patient_info.csv")
remove_na = function(x) {
x[ x %in% "N/A"] = NA
x
}
cs_demog = rename(cs_demog, id = patient_id)
cs_demog
#!/usr/bin/env RScript
#######################
# Processing Cross-sectional data
#######################
rm(list = ls())
# library(dcmtk)
# library(dcm2niir)
# library(fslr)
# library(divest)
library(dplyr)
library(matrixStats)
library(smri.process)
rootdir = ".."
proc_dir = file.path(rootdir,
"cross_sectional", "raw")
ids = list.dirs(proc_dir,
recursive = FALSE)
df = data_frame(id = basename(ids),
id_dir = ids)
ids = unique(df$id)
df = df %>% mutate(
raw_dir = file.path(id_dir, "raw"),
proc_dir = file.path(id_dir,
"prenorm"),
reg_dir = file.path(id_dir,
"registered"),
brain_malf_dir = file.path(id_dir,
"brain_malf"),
malf_dir = file.path(id_dir,
"malf")
)
mods = c("FLAIR" = "FLAIR",
"T1" = "T1W",
"T2" = "T2W",
"T1POST" = "T1WKS",
"GOLD_STANDARD" =
"consensus_gt")
mod_df = sapply(mods, function(mod) {
fname = file.path(df$id_dir,
paste0(mod, ".nii.gz"))
})
mod_df
setwd("programs/")
#!/usr/bin/env RScript
#######################
# Processing Cross-sectional data
#######################
rm(list = ls())
# library(dcmtk)
# library(dcm2niir)
# library(fslr)
# library(divest)
library(dplyr)
library(matrixStats)
library(smri.process)
rootdir = ".."
proc_dir = file.path(rootdir,
"cross_sectional", "raw")
here::here()
#!/usr/bin/env RScript
#######################
# Processing Cross-sectional data
#######################
rm(list = ls())
# library(dcmtk)
# library(dcm2niir)
# library(fslr)
# library(divest)
library(dplyr)
library(matrixStats)
library(smri.process)
library(here)
rootdir = here::here()
proc_dir = file.path(rootdir,
"cross_sectional", "raw")
ids = list.dirs(proc_dir,
recursive = FALSE)
df = data_frame(id = basename(ids),
id_dir = ids)
ids = unique(df$id)
df
df = df %>% mutate(
raw_dir = file.path(id_dir, "raw"),
proc_dir = file.path(id_dir,
"prenorm"),
reg_dir = file.path(id_dir,
"registered"),
brain_malf_dir = file.path(id_dir,
"brain_malf"),
malf_dir = file.path(id_dir,
"malf")
)
mods = c("FLAIR" = "FLAIR",
"T1" = "T1W",
"T2" = "T2W",
"T1POST" = "T1WKS",
"GOLD_STANDARD" =
"consensus_gt")
mod_df = sapply(mods, function(mod) {
fname = file.path(df$id_dir,
paste0(mod, ".nii.gz"))
})
fe = array(
file.exists(mod_df),
dim = dim(mod_df))
fe
mod_df[ !fe ] = NA
mod_df = as_data_frame(mod_df)
mod_df = mod_df %>%
mutate(have_data = rowAlls(fe))
df = cbind(df, mod_df)
df = as_data_frame(df)
df = df %>%
filter(have_data) %>%
select(-have_data)
df
load("/Users/johnmuschelli/Dropbox/Projects/open_ms_data/cs_demog.rda")
cs_demog
tail(cs_demog)
